name: strongR-frida

on:
  schedule:
    - cron: "0 9/12 * * *"
  workflow_dispatch:

jobs: 
  check_version:
    runs-on: ubuntu-20.04

    outputs:
      FRIDA_VERSION: ${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}
      ALREADY_RELEASE: ${{ steps.checkReleaseVersion.outputs.ALREADY_RELEASE }}
    steps:
      - name: Pull Frida Latest Release
        id: pullFridaLatestRelease
        uses: actions/github-script@v6
        with:
          script: |
            const releaseResponse = await github.rest.repos.getLatestRelease({
              owner: 'frida',
              repo: 'frida',
            })
            const {
              data: { tag_name: ver }
            } = releaseResponse;
            core.setOutput('FRIDA_VERSION', ver);
      - name: Check release version
        id: checkReleaseVersion
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const releaseVersion = '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'
              const releaseResponse = await github.rest.repos.getReleaseByTag({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                tag: releaseVersion
              });
              const {
                data: { tag_name: ver }
              } = releaseResponse;
              if (ver == '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'){
                  core.setOutput('ALREADY_RELEASE', '1');
              }
              else{
                  core.setOutput('ALREADY_RELEASE', '0');
              }
            } catch (e) {
              if(e.message == 'Not Found'){
                core.setOutput('ALREADY_RELEASE', '0');
              }
              else{
                core.setFailed(e.message);
              }
            }

  android_build:
    runs-on: ubuntu-20.04
    needs: check_version
    if: needs.check_version.outputs.ALREADY_RELEASE == '0'

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: ${{secrets.GIT_CREDENTIALS}}

    - name: set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1.2.0
      with:
        ndk-version: r25b

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: install dependencies
      run: |
        sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install build-essential tree ninja-build gcc-multilib g++-multilib lib32stdc++-9-dev flex bison xz-utils ruby ruby-dev python3-requests python3-setuptools python3-dev python3-pip libc6-dev libc6-dev-i386 -y
        sudo gem install fpm -v 1.11.0 --no-document
        python3 -m pip install lief

    - name: build frida for Android
      shell: bash
      run: |
        git config --global user.name "${{ secrets.GIT_NAME }}"
        git config --global user.email "${{ secrets.GIT_EMAIL }}"
        git clone ${{ secrets.PATCH_REPO }} Patchs
        export ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}
        git clone --recurse-submodules https://github.com/frida/frida
        cd frida/frida-core
        git am ../../Patchs/strongR-frida/frida-core/*.patch
        cd ../
        make core-android-arm
        make core-android-arm64
        make core-android-x86
        make core-android-x86_64

    - name: package build result for Android
      id: packageBuilds
      shell: bash
      run: |
        xz - < frida/build/frida-android-arm/bin/frida-server > "hluda-server-${{needs.check_version.outputs.FRIDA_VERSION}}-android-arm".xz
        xz - < frida/build/frida-android-arm64/bin/frida-server > "hluda-server-${{needs.check_version.outputs.FRIDA_VERSION}}-android-arm64".xz
        
        xz - < frida/build/frida-android-x86/bin/frida-server > "hluda-server-${{needs.check_version.outputs.FRIDA_VERSION}}-android-x86".xz
        xz - < frida/build/frida-android-x86_64/bin/frida-server > "hluda-server-${{needs.check_version.outputs.FRIDA_VERSION}}-android-x86_64".xz

        xz - < frida/build/frida-android-arm/bin/frida-inject > "hluda-inject-${{needs.check_version.outputs.FRIDA_VERSION}}-android-arm".xz
        xz - < frida/build/frida-android-arm64/bin/frida-inject > "hluda-inject-${{needs.check_version.outputs.FRIDA_VERSION}}-android-arm64".xz       
        
        xz - < frida/build/frida-android-x86/bin/frida-inject > "hluda-inject-${{needs.check_version.outputs.FRIDA_VERSION}}-android-x86".xz
        xz - < frida/build/frida-android-x86_64/bin/frida-inject > "hluda-inject-${{needs.check_version.outputs.FRIDA_VERSION}}-android-x86_64".xz
        
        
        xz - < frida/build/frida-android-arm/lib/frida/32/frida-gadget.so > "hluda-gadget-${{needs.check_version.outputs.FRIDA_VERSION}}-android-arm.so".xz
        xz - < frida/build/frida-android-arm64/lib/frida/64/frida-gadget.so > "hluda-gadget-${{needs.check_version.outputs.FRIDA_VERSION}}-android-arm64.so".xz       
        
        xz - < frida/build/frida-android-x86/lib/frida/32/frida-gadget.so > "hluda-gadget-${{needs.check_version.outputs.FRIDA_VERSION}}-android-x86.so".xz
        xz - < frida/build/frida-android-x86_64/lib/frida/64/frida-gadget.so > "hluda-gadget-${{needs.check_version.outputs.FRIDA_VERSION}}-android-x86_64.so".xz

        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "BUILD_ASSETS<<$EOF" >> "$GITHUB_OUTPUT"
        ls *.xz >> "$GITHUB_OUTPUT"
        echo "$EOF" >> "$GITHUB_OUTPUT"
        cat $GITHUB_OUTPUT

    - name: Upload assets for Android
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
        name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
        prerelease: false
        files: "${{ steps.packageBuilds.outputs.BUILD_ASSETS }}"

